# Euler 18
# Calculating the ideal path for max sum through number triangle

values=[[75],
[95, 64],
[17, 47, 82],
[18, 35, 87, 10],
[20, 4, 82, 47, 65],
[19, 1, 23, 75, 3, 34],
[88, 2, 77, 73, 7, 63, 67],
[99, 65, 4, 28, 6, 16, 70, 92],
[41, 41, 26, 56, 83, 40, 80, 70, 33],
[41, 48, 72, 33, 47, 32, 37, 16, 94, 29],
[53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14],
[70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57],
[91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48],
[63, 66, 4, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31],
[4, 62, 98, 27, 23, 9, 70, 98, 73, 93, 38, 53, 60, 4, 23]]

forward_pass=[[75],
[95, 64],
[17, 47, 82],
[18, 35, 87, 10],
[20, 4, 82, 47, 65],
[19, 1, 23, 75, 3, 34],
[88, 2, 77, 73, 7, 63, 67],
[99, 65, 4, 28, 6, 16, 70, 92],
[41, 41, 26, 56, 83, 40, 80, 70, 33],
[41, 48, 72, 33, 47, 32, 37, 16, 94, 29],
[53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14],
[70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57],
[91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48],
[63, 66, 4, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31],
[4, 62, 98, 27, 23, 9, 70, 98, 73, 93, 38, 53, 60, 4, 23]]
n=15
sum=0

#Calculating the "Worth" of each knot in the tree by deciding which of the following trunk is the higher
for layer in range(n-2,-1,-1):
	for i in range(0,len(values[layer])):
		values[layer][i]+=max([values[layer+1][i],values[layer+1][i+1]])

#Calculating the Sum forward pathing along the path of max "Worths"
sum+=forward_pass[0][0]			#starting with the top of the triangle
position =0						
for i in range(1,n):
	print(sum)
	if values[i][position]>values[i][position+1]:
		sum+=forward_pass[i][position]
	else:
		sum+=forward_pass[i][position+1]
		position+=1
	print(i)
	print(sum)

print(forward_pass)
print(values)
print("The highest possible sum is: "+str(sum))

#1074 is the correct solution