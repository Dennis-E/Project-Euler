#Euler 26
#Biggest recurring cycle

maximum=0
	
for i in range(2,1000):
	remainder=0.1
	list=[]
	length=0
	while True:
		remainder*=10
		if int(remainder)/i>1:
			if int(remainder) in list:
				length=len(list)-list.index(int(remainder))
				break
			else:
				list.append(int(remainder))
				remainder=int(remainder)%i
		elif int(remainder)==0:
			break
	
	if length>maximum:
		solution=i
		maximum=length

print(solution)

"""
cycle=[]
max_cycle=0
length=0
found=False

for i in range(1,10):
	number=10**10/i
	text=str(number)
	print(text)
	for k in range(len(text)):
		if text[-1:int(-(1+k))]==text[int(-(1+k)-1):int(-(1+2*k)-1)] and found==False:
			found=True
			length=k
			print(k)
		found=False
	if length>max_cycle:max_cycle=length
	number=0

print(max_cycle)
"""